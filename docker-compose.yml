services:
  news-ms:
    build: news-laptops-ms
    container_name: news-ms
    ports:
      - "8000:8000"
    depends_on:
      - mongodb
    networks:
      - 'lappy_network'
  
  specs_micro:
    build: specs-micro/
    container_name: lappy_specs
    ports:
      - '8001:8001'
    networks:
      - 'lappy_network'
    depends_on:
      - mongodb

  rating_app:
    networks:
      - 'lappy_network'
    build: LaptopRater/
    restart: always
    ports:
      - "8004:8004"
    depends_on:
      - mongodb

  accessories:
    build: Accessories/
    container_name: lappy_accessories
    ports:
      - '8002:8002'
    restart: always
    networks:
      - 'lappy_network'
    depends_on:
      - mongodb
      -   accessories-parse

  accessories-parse:
    build:
      context: Accessories/
      dockerfile: DockerfileParse
    ports:
      - '8003:8003'
    networks:
      - 'lappy_network'
    depends_on:
      - mongodb

  auth-system:
    build: auth_system/
    container_name: auth_system
    ports:
      - "8005:8005"
    depends_on:
      - redis
      - postgres
    command: supervisord -c supervisord.conf
    restart: on-failure
    networks:
      - 'lappy_network'

  redis:
    image: redis
    container_name: redis
    volumes:
      - ./auth_system/redis.conf:/usr/local/etc/redis/redis.conf
      - redis_data:/data
    command: redis-server /usr/local/etc/redis/redis.conf
    ports:
      - "6380:6380"
    networks:
      - 'lappy_network'

  postgres:
    image: postgres
    container_name: postgres
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_DB=auth_system
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      - 'lappy_network'

  mongodb:
    image: mongodb/mongodb-community-server
    container_name: mongodb
    networks:
      - 'lappy_network'
  
  mongorestore:
    image: mongodb/mongodb-community-server
    command: ["mongorestore --host mongodb --port 27017 --db laptops --collection specs /specs.bson"]
    volumes:
      - ./data/mongorestore/specs.bson:/specs.bson
    depends_on:
      - mongodb
    networks:
      - 'lappy_network'
    entrypoint: ["/bin/sh", "-c"]
    restart: "no"

  krakend:
    image: devopsfaith/krakend:watch
    container_name: krakend
    ports:
      - "8080:8080"
    volumes:
      - ./krakend.json:/etc/krakend/krakend.json
    command: [ "run", "-c", "krakend.json" ]
    depends_on:
      - news-ms
    networks:
      - 'lappy_network'

volumes:
  redis_data:

networks:
  lappy_network:
    driver: bridge
